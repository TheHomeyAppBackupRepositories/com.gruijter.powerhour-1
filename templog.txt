<ref *2> sumDriver {
  _events: [Object: null prototype] {
    __log: [Function (anonymous)],
    __error: [Function (anonymous)],
    __debug: [Function (anonymous)]
  },
  _eventsCount: 3,
  _maxListeners: undefined,
  homey: <ref *1> Homey {
    _events: [Object: null prototype] {
      __log: [Function (anonymous)],
      __error: [Function (anonymous)],
      __debug: [Function (anonymous)],
      unload: [Array],
      memwarn: [Function (anonymous)],
      everyhour: [Array],
      set_tariff_gas: [AsyncFunction (anonymous)],
      set_tariff_power: [AsyncFunction (anonymous)],
      set_tariff_water: [AsyncFunction (anonymous)]
    },
    _eventsCount: 9,
    _maxListeners: undefined,
    dir: '/',
    tmpdir: '/tmp',
    version: '8.1.2-rc.1',
    platform: 'local',
    platformVersion: 1,
    env: {},
    manifest: {
      _comment: 'This file is generated. Please edit .homeycompose/app.json instead.',
      id: 'com.gruijter.powerhour',
      version: '5.0.5',
      compatibility: '>=8.0.0',
      brandColor: '#df5020',
      sdk: 3,
      name: [Object],
      description: [Object],
      category: 'energy',
      tags: [Object],
      permissions: [Array],
      images: [Object],
      author: [Object],
      copyright: 'Robin de Gruijter (gruijter@hotmail.com)',
      license: 'GPL-3.0-or-later',
      contributors: [Object],
      contributing: [Object],
      bugs: [Object],
      homeyCommunityTopicId: 20535,
      platforms: [Array],
      source: 'https://github.com/gruijter/com.gruijter.powerhour',
      flow: [Object],
      drivers: [Array],
      capabilities: [Object]
    },
    app: MyApp {
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      homey: [Circular *1],
      manifest: [Object],
      id: 'com.gruijter.powerhour',
      sdk: 3,
      api: [HomeyAPIApp],
      _priceLowest: [FlowCardTriggerDevice],
      triggerPriceLowest: [Function (anonymous)],
      _priceLowestToday: [FlowCardTriggerDevice],
      triggerPriceLowestToday: [Function (anonymous)],
      _priceLowestBefore: [FlowCardTriggerDevice],
      triggerPriceLowestBefore: [Function (anonymous)],
      _priceLowestAvg: [FlowCardTriggerDevice],
      triggerPriceLowestAvg: [Function (anonymous)],
      _priceHighest: [FlowCardTriggerDevice],
      triggerPriceHighest: [Function (anonymous)],
      _priceHighestToday: [FlowCardTriggerDevice],
      triggerPriceHighestToday: [Function (anonymous)],
      _priceHighestBefore: [FlowCardTriggerDevice],
      triggerPriceHighestBefore: [Function (anonymous)],
      _priceHighestAvg: [FlowCardTriggerDevice],
      triggerPriceHighestAvg: [Function (anonymous)],
      _priceBelowAvg: [FlowCardTriggerDevice],
      triggerPriceBelowAvg: [Function (anonymous)],
      _priceAboveAvg: [FlowCardTriggerDevice],
      triggerPriceAboveAvg: [Function (anonymous)],
      _newPrices: [FlowCardTriggerDevice],
      newPrices: [Function (anonymous)],
      [Symbol(kCapture)]: false
    },
    __readyResolve: [Function (anonymous)],
    __readyPromise: Promise { undefined },
    _timers: Set(4) {
      Timeout {
        _idleTimeout: 3131527,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 4547,
        _onTimeout: [Function (anonymous)],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 0
      },
      Timeout {
        _idleTimeout: 60000,
        _idlePrev: [Timeout],
        _idleNext: [TimersList],
        _idleStart: 127581,
        _onTimeout: [AsyncFunction (anonymous)],
        _timerArgs: undefined,
        _repeat: 60000,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 70,
        [Symbol(triggerId)]: 0
      },
      Timeout {
        _idleTimeout: 60000,
        _idlePrev: [Timeout],
        _idleNext: [Timeout],
        _idleStart: 127933,
        _onTimeout: [AsyncFunction (anonymous)],
        _timerArgs: undefined,
        _repeat: 60000,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 71,
        [Symbol(triggerId)]: 0
      },
      Timeout {
        _idleTimeout: 60000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 127934,
        _onTimeout: [AsyncFunction (anonymous)],
        _timerArgs: undefined,
        _repeat: 60000,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 72,
        [Symbol(triggerId)]: 0
      }
    },
    _destroyed: false,
    apps: ManagerApps {
      _events: [Object: null prototype],
      _eventsCount: 4,
      _maxListeners: undefined,
      homey: [Circular *1],
      __client: [Object],
      [Symbol(kCapture)]: false
    },
    arp: ManagerArp {
      _events: [Object: null prototype],
      _eventsCount: 4,
      _maxListeners: undefined,
      homey: [Circular *1],
      __client: [Object],
      [Symbol(kCapture)]: false
    },
    audio: ManagerAudio {
      _events: [Object: null prototype],
      _eventsCount: 4,
      _maxListeners: undefined,
      homey: [Circular *1],
      __client: [Object],
      [Symbol(kCapture)]: false
    },
    ble: ManagerBLE {
      _events: [Object: null prototype],
      _eventsCount: 4,
      _maxListeners: undefined,
      homey: [Circular *1],
      __client: [Object],
      __advertisementsByPeripheralUUID: {},
      [Symbol(kCapture)]: false
    },
    cloud: ManagerCloud {
      _events: [Object: null prototype],
      _eventsCount: 4,
      _maxListeners: undefined,
      homey: [Circular *1],
      __client: [Object],
      _webhooks: {},
      _oauth2Callbacks: {},
      [Symbol(kCapture)]: false
    },
    clock: ManagerClock {
      _events: [Object: null prototype],
      _eventsCount: 4,
      _maxListeners: undefined,
      homey: [Circular *1],
      __client: [Object],
      _timezone: 'Europe/Amsterdam',
      [Symbol(kCapture)]: false
    },
    drivers: ManagerDrivers {
      _events: [Object: null prototype],
      _eventsCount: 4,
      _maxListeners: undefined,
      homey: [Circular *1],
      __client: [Object],
      _drivers: [Object],
      _pairSessions: Map(0) {},
      [Symbol(kCapture)]: false
    },
    discovery: ManagerDiscovery {
      _events: [Object: null prototype],
      _eventsCount: 4,
      _maxListeners: undefined,
      homey: [Circular *1],
      __client: [Object],
      [Symbol(kCapture)]: false,
      [Symbol(strategies)]: {}
    },
    flow: ManagerFlow {
      _events: [Object: null prototype],
      _eventsCount: 4,
      _maxListeners: undefined,
      homey: [Circular *1],
      __client: [Object],
      _cards: [Map],
      _tokens: Map(0) {},
      [Symbol(kCapture)]: false
    },
    geolocation: ManagerGeolocation {
      _events: [Object: null prototype],
      _eventsCount: 4,
      _maxListeners: undefined,
      homey: [Circular *1],
      __client: [Object],
      _latitude: null,
      _longitude: null,
      _accuracy: null,
      _mode: null,
      [Symbol(kCapture)]: false
    },
    i18n: ManagerI18n {
      _events: [Object: null prototype],
      _eventsCount: 4,
      _maxListeners: undefined,
      homey: [Circular *1],
      __client: [Object],
      _language: 'en',
      _units: 'metric',
      [Symbol(kCapture)]: false
    },
    images: ManagerImages {
      _events: [Object: null prototype],
      _eventsCount: 4,
      _maxListeners: undefined,
      homey: [Circular *1],
      __client: [Object],
      _images: {},
      [Symbol(kCapture)]: false
    },
    insights: ManagerInsights {
      _events: [Object: null prototype],
      _eventsCount: 4,
      _maxListeners: undefined,
      homey: [Circular *1],
      __client: [Object],
      [Symbol(kCapture)]: false
    },
    ledring: ManagerLedring {
      _events: [Object: null prototype],
      _eventsCount: 4,
      _maxListeners: undefined,
      homey: [Circular *1],
      __client: [Object],
      _animations: Map(0) {},
      [Symbol(kCapture)]: false
    },
    nfc: ManagerNFC {
      _events: [Object: null prototype],
      _eventsCount: 4,
      _maxListeners: undefined,
      homey: [Circular *1],
      __client: [Object],
      [Symbol(kCapture)]: false
    },
    notifications: ManagerNotifications {
      _events: [Object: null prototype],
      _eventsCount: 4,
      _maxListeners: undefined,
      homey: [Circular *1],
      __client: [Object],
      [Symbol(kCapture)]: false
    },
    rf: ManagerRF {
      _events: [Object: null prototype],
      _eventsCount: 4,
      _maxListeners: undefined,
      homey: [Circular *1],
      __client: [Object],
      _signals: Map(0) {},
      [Symbol(kCapture)]: false
    },
    settings: ManagerSettings {
      _events: [Object: null prototype],
      _eventsCount: 4,
      _maxListeners: undefined,
      homey: [Circular *1],
      __client: [Object],
      _settings: {},
      _initialized: true,
      [Symbol(kCapture)]: false
    },
    speechInput: ManagerSpeechInput {
      _events: [Object: null prototype],
      _eventsCount: 4,
      _maxListeners: undefined,
      homey: [Circular *1],
      __client: [Object],
      [Symbol(kCapture)]: false
    },
    speechOutput: ManagerSpeechOutput {
      _events: [Object: null prototype],
      _eventsCount: 4,
      _maxListeners: undefined,
      homey: [Circular *1],
      __client: [Object],
      [Symbol(kCapture)]: false
    },
    zigbee: ManagerZigBee {
      _events: [Object: null prototype],
      _eventsCount: 4,
      _maxListeners: undefined,
      homey: [Circular *1],
      __client: [Object],
      _nodes: {},
      [Symbol(kCapture)]: false
    },
    zwave: ManagerZwave {
      _events: [Object: null prototype],
      _eventsCount: 4,
      _maxListeners: undefined,
      homey: [Circular *1],
      __client: [Object],
      _nodes: {},
      [Symbol(kCapture)]: false
    },
    api: ManagerApi {
      _events: [Object: null prototype],
      _eventsCount: 4,
      _maxListeners: undefined,
      homey: [Circular *1],
      __client: [Object],
      _endpoints: undefined,
      _apis: Map(0) {},
      [Symbol(kCapture)]: false
    },
    __strings: {},
    __: [Function: __],
    [Symbol(kCapture)]: false
  },
  driver: sumDriver {
    _events: [Object: null prototype] {
      __log: [Function: bound bound log],
      __error: [Function: bound bound error],
      __debug: [Function: bound bound __debug]
    },
    _eventsCount: 3,
    _maxListeners: undefined,
    id: 'gas',
    homey: <ref *1> Homey {
      _events: [Object: null prototype],
      _eventsCount: 9,
      _maxListeners: undefined,
      dir: '/',
      tmpdir: '/tmp',
      version: '8.1.2-rc.1',
      platform: 'local',
      platformVersion: 1,
      env: {},
      manifest: [Object],
      app: [MyApp],
      __readyResolve: [Function (anonymous)],
      __readyPromise: [Promise],
      _timers: [Set],
      _destroyed: false,
      apps: [ManagerApps],
      arp: [ManagerArp],
      audio: [ManagerAudio],
      ble: [ManagerBLE],
      cloud: [ManagerCloud],
      clock: [ManagerClock],
      drivers: [ManagerDrivers],
      discovery: [ManagerDiscovery],
      flow: [ManagerFlow],
      geolocation: [ManagerGeolocation],
      i18n: [ManagerI18n],
      images: [ManagerImages],
      insights: [ManagerInsights],
      ledring: [ManagerLedring],
      nfc: [ManagerNFC],
      notifications: [ManagerNotifications],
      rf: [ManagerRF],
      settings: [ManagerSettings],
      speechInput: [ManagerSpeechInput],
      speechOutput: [ManagerSpeechOutput],
      zigbee: [ManagerZigBee],
      zwave: [ManagerZwave],
      api: [ManagerApi],
      __strings: {},
      __: [Function: __],
      [Symbol(kCapture)]: false
    },
    manifest: {
      name: [Object],
      images: [Object],
      class: 'other',
      capabilities: [],
      pair: [Array],
      settings: [Array],
      platforms: [Array],
      connectivity: [Array],
      id: 'gas'
    },
    ds: {
      driverId: 'gas',
      originDeviceCapabilities: [Array],
      deviceCapabilities: [Array]
    },
    eventListenerHour: [AsyncFunction (anonymous)],
    eventListenerTariff: [AsyncFunction (anonymous)],
    [Symbol(kCapture)]: false,
    [Symbol(client)]: { emit: [AsyncFunction: emit] },
    [Symbol(devicesById)]: {
      '97405bc6-c519-4f24-89db-f2b0b25e4027': [sumDriver],
      'a37426a9-4355-4aa0-8b9e-3443d9f4e4bd': [Circular *2]
    },
    [Symbol(readyPromise)]: Promise { undefined }
  },
  ds: {
    cmap: {
      this_hour: 'meter_m3_this_hour',
      last_hour: 'meter_m3_last_hour',
      this_day: 'meter_m3_this_day',
      last_day: 'meter_m3_last_day',
      this_month: 'meter_m3_this_month',
      last_month: 'meter_m3_last_month',
      this_year: 'meter_m3_this_year',
      last_year: 'meter_m3_last_year',
      meter_source: 'meter_gas',
      measure_source: 'measure_gas'
    }
  },
  restarting: false,
  initReady: true,
  capabilityInstances: {
    meterGas: DeviceCapability {
      __onCapabilityValue: [Function: bound __onCapabilityValue],
      __onDeviceDelete: [Function: bound __onDeviceDelete],
      id: 'meter_gas'
    }
  },
  timeZone: 'Europe/Amsterdam',
  settings: {
    homey_device_id: 'ae8202ab-e207-419c-96b0-2723c5873add',
    homey_device_name: 'LS120P1',
    level: '5.0.5',
    tariff_update_group: 1,
    distribution: 'gas_nl_2023',
    source_device_type: 'Homey device',
    homey_device_daily_reset: false,
    interval: 0,
    wait_for_update: 0,
    start_date: '0101',
    budget: 1200,
    decimals_meter: 4,
    meter_latest: '9925.31',
    meter_day_start: 9923.18,
    meter_month_start: 9909.59,
    meter_year_start: 9909.59,
    min_max_reset: 'day',
    currency: '¤',
    decimals: 2,
    meter_money_this_day: 2.967266446107193,
    meter_money_this_month: 21.93726644610719,
    meter_money_this_year: 21.93726644610719,
    meter_money_last_day: 5.401950735459383,
    meter_money_last_month: 0,
    meter_money_last_year: 0,
    tariff: 1.3914834948600001,
    markup_month: 0,
    markup_day: 0,
    markup_hour: 0,
    energy_value_constant: null,
    meter_money_last_hour: 0.4035302135080839
  },
  migrated: true,
  sourceDevice: Device {
    id: 'ae8202ab-e207-419c-96b0-2723c5873add',
    name: 'LS120P1',
    driverUri: 'homey:app:com.gruijter.enelogic',
    driverId: 'LS120',
    zone: '9919ee1e-ffbc-480b-bc4b-77fb047e9e68',
    zoneName: 'Home',
    icon: null,
    iconObj: {
      id: 'b1e296d7bf151288d7ba4b6aa8c5bcda',
      url: '/icon/b1e296d7bf151288d7ba4b6aa8c5bcda/icon.svg'
    },
    iconOverride: null,
    settings: {
      youLessIp: '10.0.0.48',
      password: '',
      model: 'LS120',
      mac: '72:b8:a:14:26:1b',
      ledring_usage_limit: 2500,
      ledring_production_limit: 1800,
      pollingInterval: 10,
      filterReadings: true,
      energy_cumulative_include: true,
      include_off_peak: true,
      include_production: true,
      include_gas: true,
      reversed: false,
      include3phase: false,
      level: '4.3.0',
      energy_value_constant: null
    },
    settingsObj: true,
    class: 'sensor',
    energy: null,
    energyObj: { W: 3150, batteries: null, cumulative: true, generator: null },
    virtualClass: null,
    capabilities: [
      'measure_gas',
      'meter_offPeak',
      'measure_power',
      'meter_power.peak',
      'meter_power.offPeak',
      'meter_power.producedPeak',
      'meter_power.producedOffPeak',
      'meter_power',
      'meter_gas'
    ],
    capabilitiesObj: {
      measure_gas: [Object],
      meter_offPeak: [Object],
      measure_power: [Object],
      'meter_power.peak': [Object],
      'meter_power.offPeak': [Object],
      'meter_power.producedPeak': [Object],
      'meter_power.producedOffPeak': [Object],
      meter_power: [Object],
      meter_gas: [Object]
    },
    flags: [],
    ui: { components: [Array], componentsStartAt: 0 },
    uiIndicator: null,
    ready: true,
    available: true,
    repair: false,
    unpair: false,
    unavailableMessage: null,
    images: [],
    insights: [
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object]
    ],
    color: '#469f00',
    data: { id: 'LS120P1_72:b8:a:14:26:1b' }
  },
  tariffHistory: {
    previous: 1.3914834948600001,
    previousTm: '2022-12-30T15:51:58.355Z',
    current: 1.3914834948600001,
    currentTm: 2022-12-30T16:08:57.447Z
  },
  dayStartCumVal: 9923.18,
  cumVal: 9923.18,
  lastAbsVal: 0,
  startDay: 1,
  startMonth: 0,
  budgets: { monthToDate: 199.64991240000003, yearToDate: 1193.0982803999993 },
  lastReadingHour: {
    hour: 17,
    day: 30,
    month: 11,
    year: 2022,
    meterValue: 9925.88,
    meterTm: 2022-12-30T16:07:59.834Z
  },
  lastReadingDay: {
    hour: 0,
    day: 30,
    month: 11,
    year: 2022,
    meterValue: 9923.18,
    meterTm: '2022-12-29T23:00:00.885Z'
  },
  lastReadingMonth: {
    hour: 3,
    day: 26,
    month: 11,
    year: 2022,
    meterValue: 9909.59,
    meterTm: '2022-12-26T02:14:38.399Z'
  },
  lastReadingYear: {
    hour: 3,
    day: 26,
    month: 11,
    year: 2022,
    meterValue: 9909.59,
    meterTm: '2022-12-26T02:14:38.399Z'
  },
  lastMinMax: {
    reading: {
      hour: 17,
      day: 30,
      month: 11,
      year: 2022,
      meterValue: 9925.88,
      meterTm: 2022-12-30T16:07:59.834Z
    },
    wattMax: 3519,
    lpmMax: 58.6,
    wattMin: 0,
    lpmMin: 0,
    reset: '2022-12-29T23:00:07.329Z'
  },
  lastMeasure: { value: 0, measureTm: 2022-12-30T15:51:05.522Z },
  meterMoney: {
    hour: 0.6261675726880125,
    day: 4.386167572688012,
    month: 23.356167572688012,
    year: 23.356167572688012,
    meterValue: 9926.33,
    lastHour: 0.79,
    lastDay: 5.4,
    lastMonth: null,
    lastYear: null
  },
  minMaxInitReady: true,
  [Symbol(kCapture)]: false,
  [Symbol(client)]: { emit: [AsyncFunction: emit] },
  [Symbol(readyResolve)]: [Function (anonymous)],
  [Symbol(readyReject)]: [Function (anonymous)],
  [Symbol(readyPromise)]: Promise { undefined },
  [Symbol(data)]: { id: 'PH_gas_ae8202ab-e207-419c-96b0-2723c5873add_2cd87a' },
  [Symbol(capabilityListeners)]: Map(0) {},
  [Symbol(destroyListeners)]: [],
  [Symbol(onSettingsPending)]: false,
  [Symbol(available)]: true,
  [Symbol(unavailableMessage)]: null,
  [Symbol(name)]: 'LS120P2_Σgas',
  [Symbol(class)]: 'other',
  [Symbol(energy)]: {},
  [Symbol(capabilities)]: [
    'meter_m3_last_hour',
    'meter_m3_this_hour',
    'meter_m3_last_day',
    'meter_m3_this_day',
    'meter_m3_last_month',
    'meter_m3_this_month',
    'meter_m3_last_year',
    'meter_m3_this_year',
    'meter_target_month_to_date',
    'meter_target_year_to_date',
    'meter_money_last_hour',
    'meter_money_this_hour',
    'meter_money_last_day',
    'meter_money_this_day',
    'meter_money_last_month',
    'meter_money_this_month',
    'meter_money_last_year',
    'meter_money_this_year',
    'meter_tariff',
    'meter_gas',
    'measure_gas',
    'last_minmax_reset',
    'measure_lpm_min',
    'measure_lpm_max'
  ],
  [Symbol(capabilitiesOptions)]: {
    meter_m3_last_hour: {},
    meter_m3_this_hour: {},
    meter_m3_last_day: {},
    meter_m3_this_day: {},
    meter_m3_last_month: {},
    meter_m3_this_month: {},
    meter_m3_last_year: {},
    meter_m3_this_year: {},
    meter_target_month_to_date: {},
    meter_target_year_to_date: {},
    meter_money_last_hour: {},
    meter_money_this_hour: {},
    meter_money_last_day: {},
    meter_money_this_day: {},
    meter_money_last_month: {},
    meter_money_this_month: {},
    meter_money_last_year: {},
    meter_money_this_year: {},
    meter_tariff: {},
    meter_gas: {},
    measure_gas: {},
    last_minmax_reset: {},
    measure_lpm_min: {},
    measure_lpm_max: {}
  },
  [Symbol(settings)]: {
    homey_device_id: 'ae8202ab-e207-419c-96b0-2723c5873add',
    homey_device_name: 'LS120P1',
    level: '5.0.5',
    tariff_update_group: 1,
    distribution: 'gas_nl_2023',
    source_device_type: 'Homey device',
    homey_device_daily_reset: false,
    interval: 0,
    wait_for_update: 0,
    start_date: '0101',
    budget: 1200,
    decimals_meter: 4,
    meter_latest: '9925.88',
    meter_day_start: 9923.18,
    meter_month_start: 9909.59,
    meter_year_start: 9909.59,
    min_max_reset: 'day',
    currency: '¤',
    decimals: 2,
    meter_money_this_day: 3.76,
    meter_money_this_month: 22.73,
    meter_money_this_year: 22.73,
    meter_money_last_day: 5.401950735459383,
    meter_money_last_month: 0,
    meter_money_last_year: 0,
    tariff: 1.3914834948600001,
    markup_month: 0,
    markup_day: 0,
    markup_hour: 0,
    energy_value_constant: null,
    meter_money_last_hour: 0.79
  },
  [Symbol(state)]: {
    last_minmax_reset: '30-12 00:00',
    meter_gas: 9925.88,
    meter_m3_this_hour: 0,
    meter_m3_this_day: 2.6999999999989086,
    meter_m3_this_month: 16.289999999999054,
    meter_m3_this_year: 16.289999999999054,
    meter_target_year_to_date: 1.3653527347754284,
    meter_target_month_to_date: 8.159282317821843,
    meter_tariff: 1.3914834948600001,
    meter_money_this_hour: 0,
    meter_money_this_day: 3.76,
    meter_money_this_month: 22.73,
    meter_money_this_year: 22.73,
    meter_m3_last_hour: 0.569999999999709,
    meter_money_last_hour: 0.79,
    measure_gas: 0,
    measure_lpm_max: 58.6,
    measure_lpm_min: 0,
    meter_m3_last_day: 4,
    meter_money_last_day: 5.4
  },
  [Symbol(store)]: {
    lastReadingHour: {
      hour: 17,
      day: 30,
      month: 11,
      year: 2022,
      meterValue: 9925.88,
      meterTm: '2022-12-30T16:07:59.834Z'
    },
    lastReadingDay: {
      hour: 0,
      day: 30,
      month: 11,
      year: 2022,
      meterValue: 9923.18,
      meterTm: '2022-12-29T23:00:00.885Z'
    },
    lastReadingMonth: {
      hour: 3,
      day: 26,
      month: 11,
      year: 2022,
      meterValue: 9909.59,
      meterTm: '2022-12-26T02:14:38.399Z'
    },
    lastReadingYear: {
      hour: 3,
      day: 26,
      month: 11,
      year: 2022,
      meterValue: 9909.59,
      meterTm: '2022-12-26T02:14:38.399Z'
    },
    lastMinMax: {
      reading: [Object],
      wattMax: 3519,
      lpmMax: 58.6,
      wattMin: 0,
      lpmMin: 0,
      reset: '2022-12-29T23:00:07.329Z'
    },
    tariffHistory: {
      previous: 1.3914834948600001,
      previousTm: '2022-12-30T15:51:58.355Z',
      current: 1.3914834948600001,
      currentTm: '2022-12-30T16:08:57.447Z'
    }
  },
  [Symbol(availableStatusQueue)]: AsyncQueue { _current: Promise { undefined } },
  [Symbol(capabilityValueQueues)]: {
    meter_m3_last_hour: AsyncQueue { _current: [Promise] },
    meter_m3_this_hour: AsyncQueue { _current: [Promise] },
    meter_m3_this_day: AsyncQueue { _current: [Promise] },
    meter_m3_this_month: AsyncQueue { _current: [Promise] },
    meter_m3_this_year: AsyncQueue { _current: [Promise] },
    meter_target_year_to_date: AsyncQueue { _current: [Promise] },
    meter_target_month_to_date: AsyncQueue { _current: [Promise] },
    meter_tariff: AsyncQueue { _current: [Promise] },
    meter_money_last_hour: AsyncQueue { _current: [Promise] },
    meter_money_this_hour: AsyncQueue { _current: [Promise] },
    meter_gas: AsyncQueue { _current: [Promise] },
    meter_money_this_day: AsyncQueue { _current: [Promise] },
    meter_money_this_month: AsyncQueue { _current: [Promise] },
    meter_money_this_year: AsyncQueue { _current: [Promise] }
  }
}